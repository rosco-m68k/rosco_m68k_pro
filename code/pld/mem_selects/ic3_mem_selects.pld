GAL22V10
MEMSELS

ROMS   RAMS   A22    A21    A1     A0     RW     BOOT   NC     SIZ0   SIZ1   GND
ZRAMS  RAMEN0 RAMEN1 RAMEN2 RAMEN3 ROMEN0 ROMEN1 ROMEN2 ROMEN3 NC     NC     VCC

/ROMEN0 =  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 * /SIZ1 * /A0 *  A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 *  SIZ1 * /A0 *  A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  SIZ0 *  SIZ1 * /A0 *  A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  A0   *  A1
        +  BOOT * /A22 * /A21 * /ROMS *  RW
        + /BOOT * /RAMS

/ROMEN1 =  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 *  SIZ1 *  A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /A0 *  A1
        +  BOOT * /A22 * /A21 * /ROMS *  RW
        + /BOOT * /RAMS

/ROMEN2 =  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW * /SIZ0 *  SIZ1 * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS * /RW *  A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS *  RW
        + /BOOT * /RAMS

/ROMEN3 =  BOOT * /A22 * /A21 * /ROMS * /RW * /A0 * /A1
        +  BOOT * /A22 * /A21 * /ROMS *  RW
        + /BOOT * /RAMS


/RAMEN0 = BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  A0   *  A1
        + BOOT * /A22 * /A21 * /RAMS *  RW

/RAMEN1 = BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /A0 *  A1
        + BOOT * /A22 * /A21 * /RAMS *  RW

/RAMEN2 = BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS * /RW *  A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS *  RW

/RAMEN3 = BOOT * /A22 * /A21 * /RAMS * /RW * /A0 * /A1
        + BOOT * /A22 * /A21 * /RAMS *  RW

DESCRIPTION

rosco_m68k Pro L2 Address Decoder (IC3) - Provides selects for onboard memory (except 
for the ZRAM, which is handled elsewhere, or perhaps not at all... The select is here
for possible future use though).

Copyright (c)2021 Ross Bamford & Contributors
See LICENSE.md for licence details (spoiler: CERN / MIT).

Chip selects for onboard memory (both ROM and RAM) are generated by equations 
based on simplified versions of the following full equations (with STROBE 
replaced by the appropriate strobe, and address lines/BOOT taken into account):

NB = EN0 is LLD
     EN1 is LMD
     EN2 is UMD
     EN3 is UUD 

(See below)

FULLEN0 = /STROBE * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE * /RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE * /RW *  SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE * /RW * /SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 *  A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 *  A1
        + /STROBE * /RW *  SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 *  A1

FULLEN1 = /STROBE * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE * /RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE * /RW *  SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 *  A1

FULLEN2 = /STROBE * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE * /RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE * /RW *  SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 *  A1  

FULLEN3 = /STROBE * /RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE * /RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE * /RW *  SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 * /A1
        + /STROBE * /RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 * /A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 * /A0 *  A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 * /A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 * /A1
        + /STROBE *  RW * /SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW * /SIZ0 *  SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 * /SIZ1 *  A0 *  A1
        + /STROBE *  RW *  SIZ0 *  SIZ1 *  A0 *  A1

The onboard memory devices are numbered 0-3, where 0 is the least-significant byte (LLDS in the 
notation above connecting to D0-D7), and 3 is the most-significant byte (UUDS above, connecting
to D24-D31). Worth noting that, due to a lack of foresight, this is reversed to the numerical
order from the datasheet.

The post-reset BOOT line handled here and will always select all ROMs for 32-bit read.

The address spaces decoded by this IC are as follows:

(N.B. Bits indicated which * are decoded by L1 decoder).

============================================================================================================
RAM:
Addr       => 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  0
------------|-----------------------------------------------------------------------------------------------
0x00000000 => 0* 0* 0* 0* 0* 0* 0* 0* 0* 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
    ...
    ...
    ...
0x001fffff => 0* 0* 0* 0* 0* 0* 0* 0* 0* 0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1


============================================================================================================
ROM: 
Addr       => 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  0
------------|-----------------------------------------------------------------------------------------------
0xff000000 => 1* 1* 1* 1* 1* 1* 1* 1* 0* 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
    ...
    ...
    ...
0xff1fffff => 1* 1* 1* 1* 1* 1* 1* 1* 0* 0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1

